#!/usr/bin/env python3

'''
Calculate average charged-particle multiplicity <N_ch>
and flow cumulants v_n{k} for a batch of events.
'''

import sys

import numpy as np


def cumulant_generator(Qn, M):
    for n, (Qnr, Qni) in enumerate(zip(*[iter(Qn)]*2), start=2):
        cn2 = np.sum(Qnr*Qnr + Qni*Qni - M) / np.sum(M*(M-1))
        vn2 = abs(cn2)**.5
        if cn2 < 0:
            vn2 *= -1
        yield vn2


def main():
    Nch_all, Nch_flow, *Qn = \
        np.array([l.split() for l in sys.stdin.buffer], dtype=np.float64).T

    print(Nch_all.mean(), *cumulant_generator(Qn, Nch_flow))


if __name__ == "__main__":
    main()
